<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhrgCiAIcAAAAAADMAAGYAAJkAAMwAAP8AAAAzADMzAGYzAJkzAMwzAP8zAABmADNmAGZmAJlm
        AMxmAP9mAACZADOZAGaZAJmZAMyZAP+ZAADMADPMAGbMAJnMAMzMAP/MAAD/ADP/AGb/AJn/AMz/AP//
        AAAAMzMAM2YAM5kAM8wAM/8AMwAzMzMzM2YzM5kzM8wzM/8zMwBmMzNmM2ZmM5lmM8xmM/9mMwCZMzOZ
        M2aZM5mZM8yZM/+ZMwDMMzPMM2bMM5nMM8zMM//MMwD/MzP/M2b/M5n/M8z/M///MwAAZjMAZmYAZpkA
        ZswAZv8AZgAzZjMzZmYzZpkzZswzZv8zZgBmZjNmZmZmZplmZsxmZv9mZgCZZjOZZmaZZpmZZsyZZv+Z
        ZgDMZjPMZmbMZpnMZszMZv/MZgD/ZjP/Zmb/Zpn/Zsz/Zv//ZgAAmTMAmWYAmZkAmcwAmf8AmQAzmTMz
        mWYzmZkzmcwzmf8zmQBmmTNmmWZmmZlmmcxmmf9mmQCZmTOZmWaZmZmZmcyZmf+ZmQDMmTPMmWbMmZnM
        mczMmf/MmQD/mTP/mWb/mZn/mcz/mf//mQAAzDMAzGYAzJkAzMwAzP8AzAAzzDMzzGYzzJkzzMwzzP8z
        zABmzDNmzGZmzJlmzMxmzP9mzACZzDOZzGaZzJmZzMyZzP+ZzADMzDPMzGbMzJnMzMzMzP/MzAD/zDP/
        zGb/zJn/zMz/zP//zAAA/zMA/2YA/5kA/8wA//8A/wAz/zMz/2Yz/5kz/8wz//8z/wBm/zNm/2Zm/5lm
        /8xm//9m/wCZ/zOZ/2aZ/5mZ/8yZ//+Z/wDM/zPM/2bM/5nM/8zM///M/wD//zP//2b//5n//8z/////
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACH/C05FVFNDQVBFMi4wAwEBAAAh+QQBAADXACwAAAAArgCiAAAI/wABCBxIsKDBgwgTKlzIsKHDhxAj
        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
        jM+oE6DTidP4RQtmjde4EhbIOscREAA7
</value>
  </data>
</root>